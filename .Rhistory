##### Read PDFs and Extract Tables #####
library(rJava)
library(tabulizer)
library(plyr)
library(tidyverse)
library(data.table)
## directory
base <- "H:/Public/Justice Program/Reports and Pubs/Crim/Arnold Foundation Fees and Fines (Phase II)/Data/Cost Data/New Mexico/Caseloads2"
setwd(base)
## obtain pdfs from directory
pdfs <- list.files(base)
## read pdfs and extract tables
pdf_tables_2017 <- list(NA)
## 2017
dc_2017 <- list(NA)
for(i in 6:20){
dc_2017[[i]] <- extract_tables(pdfs[[3]], i)
}
View(pdf_tables_2017)
rm(pdf_tables_2017)
dc_2017[[1]]
View(dc_2017)
View(dc_2017[[6]]
dc_2017[[6]]
dc_2017[[20]]
dc_2016 <- list(NA)
for(i in 6:19){
dc_2016[[i]] <- extract_tables(pdfs[[2]], i)
}
dc_2016[[1]]
dc_2016[[6]]
dc_2016[[19]]
## 2015
dc_2015 <- list(NA)
for(i in 6:19){
dc_2015[[i]] <- extract_tables(pdfs[[1]],i)
}
dc_2015[[1]]
dc_2015[[6]]
dc_2015[[19]]
View(dc_2017)
View(dc_2016)
View(dc_2017)
View(dc_2015)
lapply(dc_2017,length)
is.logical()
lapply(dc_2017, is.logical)
dc_2017 <- dc_2017[lapply(dc_2017,length)>0 | lapply(dc_2017, is.logical)==FALSE]
View(dc_2017)
View(dc_2017)
dc_2017[[1]]
dc_2017[[2]]
dc_2017 <- dc_2017[lapply(dc_2017,length)>0 & lapply(dc_2017, is.logical)==FALSE]
dc_2017[[1]]
dc_2017[[1]]
str(dc_2017[[1]])
# convert each to df
dc_2017 <- lapply(dc_2017, data.frame)
View(dc_2017)
dc_2017[[1]]
dc_2017[[1]][1:4]
dc_2017[[1]][1:4,]
paste(unlist(dc_2017[[1]][1:4,]), sep= " ")
paste(unlist(dc_2017[[1]][1:4,]), sep="")
?ddply
dc_2017[[1]][1:4,]
View(dc_2015)
View(dc_2017)
View(dc_2016)
dc_2017
dc_2017[[1]]
dc_2017[[1]]$X9
dc_2016[[1]]$X9
clean_dc <- function(l){
l <- l[lapply(l,length) >0) &
lapply(l,is.logical)==FALSE]
l <- lapply(l, data.frame)
}
clean_dc <- function(l){
l <- l[lapply(l,length) >0) &
lapply(l,is.logical)==FALSE]
l <- lapply(l, data.frame)
}
clean_dc <- function(lis){
lis <- lis[lapply(lis,length) >0) &
lapply(lis,is.logical)==FALSE]
lis <- lapply(lis, data.frame)
}
clean_dc <- function (lis){
lis <- lis[lapply(lis,length) >0) &
lapply(lis,is.logical)==FALSE]
lis <- lapply(lis, data.frame)
}
clean_dc <- function(lis){
lis <- lis[lapply(lis,length) >0) &
lapply(lis,is.logical)==FALSE]
lis <- lapply(lis, data.frame)
}
function(lis){
lis <- lis[lapply(lis,length) >0) &
lapply(lis,is.logical)==FALSE]
lis <- lapply(lis, data.frame)
}
function(lis){
lis <- lis[lapply(lis,length) >0 &
lapply(lis,is.logical)==FALSE]
lis <- lapply(lis, data.frame)
}
clean_dc <- function(lis){
lis <- lis[lapply(lis,length) >0 &
lapply(lis,is.logical)==FALSE]
lis <- lapply(lis, data.frame)
}
rm(list=ls())
##### Read PDFs and Extract Tables #####
library(rJava)
library(tabulizer)
library(plyr)
library(tidyverse)
library(data.table)
## directory
base <- "H:/Public/Justice Program/Reports and Pubs/Crim/Arnold Foundation Fees and Fines (Phase II)/Data/Cost Data/New Mexico/Caseloads2"
setwd(base)
## obtain pdfs from directory
pdfs <- list.files(base)
## District Criminal ##
## 2017
dc_2017 <- list(NA)
for(i in 6:20){
dc_2017[[i]] <- extract_tables(pdfs[[3]], i)
}
## 2016
dc_2016 <- list(NA)
for(i in 6:19){
dc_2016[[i]] <- extract_tables(pdfs[[2]], i)
}
## 2015
dc_2015 <- list(NA)
for(i in 6:19){
dc_2015[[i]] <- extract_tables(pdfs[[1]],i)
}
clean_dc <- function(lis){
lis <- lis[lapply(lis,length) >0 &
lapply(lis,is.logical)==FALSE]
lis <- lapply(lis, data.frame)
return(lis)
}
clean_dc(dc_2017)
dc_2017_c<- clean_dc(dc_2017)
dc_2016_c <- clean_dc(dc_2016)
dc_2015_c <- clean_dc(dc_2015)
View(dc_2017_c)
View(dc_2016_c)
View(dc_2015_c)
View(dc_2016_c)
dc_2016_c[[3]]
View(dc_2017_c)
dc_2016_c[[20]]
dc_2016_c[[14]]
dc_2015_c[[14]]
dc_2016_c[[14]]
dc_2017_c[[15]]
dc_2017_c[[1]]$X9
dc_2017_c[[1]]$X9
is_empty(dc_2017_c[[1]]$X9)
dc_2017_c[[1]]$X9 == ""
sum(dc_2017_c[[1]]$X9 == "")
sum(dc_2017_c[[1]]$X9 == "") == nrow(dc_2017_c[[1]])
colSums(dc_2017_c[[1]])
colSums(dc_2017_c[[1]]$X9)
is.na(dc_2017_c[[1]]$X9)
View(dc_2017_c)
lapply(dc_2017_c, function(x){})
lapply(dc_2017_c, function(x){x[sum(x=="") != nrow(x)]})
try.1 <- lapply(dc_2017_c, function(x){x[sum(x=="") != nrow(x)]})
View(try.1)
View(dc_2017_c)
dc_2017_c[[1]]
dc_2017_c[[1]]$X9
try.1[[1$X9
try.1[[1]]$X9
dc_2017_c[[10]]$X9
dc_2017_c[[10]]$X10
dc_2017_c[[10]]$X11
dc_2017_c[[10]]$X9
try.1[[10]]$X9
try.2 <- lapply(dc_2017_c, function(x){,x[sum(x=="") != nrow(x)]})
try.2 <- lapply(dc_2017_c, function(x){x[sum(x=="") != nrow(x)], })
try.2 <- lapply(dc_2017_c, function(x){x[sum(x=="") != nrow(x),]})
try.2[[10]]$X9
Filter(function(x) !(all(x=="")), dc_2017_c[[1]])
?Filter
Filter(function(x) !(all(x=="")), dc_2017_c)
try.3 <- Filter(function(x) !(all(x=="")), dc_2017_c)
View(try.3)
try.3[[1]]$X9
x <- Filter(function(x) !(all(x=="")), dc_2017_c[[1]])
x <- lapply(dc_2017_c, Filter(function(df,x) !(all([x]=="")), df))
x <- lapply(dc_2017_c, Filter(function(df,x) !(all(x=="")), df))
x <- lapply(dc_2017_c, Filter(function(df,x) !(all(x =="")), df))
x[sapply(dc_2017_c, nrow)>0]
dc_2017_c[sapply(dc_2017_c, nrow)>0]
sapply(dc_2017_c, function(x) x[sum(x == "") != nrow(x)])]
sapply(dc_2017_c, function(x) x[sum(x == "") != nrow(x)])
try.4 <- sapply(dc_2017_c, function(x) x[sum(x == "") != nrow(x)])
dc_2017_c[[1]]$X9
try.4[[1]]$X9
dc_2017_c[[1]]$X9
sum(dc_2017_c[[1]]$X9) != nrow(dc_2017_c[[1]])
sum(dc_2017_c[[1]]$X9 == "") != nrow(dc_2017_c[[1]])
dc_2017_c[[1]]$X9 == ""
sum(dc_2017_c[[1]]$X9 == "") == nrow(dc_2017_c)[[1]])
sum(dc_2017_c[[1]]$X9 == "") == nrow(dc_2017_c[[1]])
?sapply
install.packages("janitor")
library(janitor)
remove_empty(dc_2017_c[[1]], which = "cols")
remove_empty_cols()
remove_empty_cols()
remove_empty()
?remove_empty()
rm(try.1)
rm(try.2)
rm(try.3)
rm(try.34
rm(x)
rm(x)
rm(try.4)
dc_2017_c[[1]]
dc_2017_c[[1]]
dc_2017_c[[1]][ncol(dc_2017_c[[1]])]
lapply(dc_2017_c, function(df) sapply(df[ncol(df)],function(x) {any(is.na(x))})
lapply(dc_2017_c, function(df) sapply(df[ncol(df)],function(x) {any(is.na(x))}))
lapply(dc_2017_c, function(df) sapply(df[2],function(x) {any(is.na(x))})
lapply(dc_2017_c, function(df) sapply(df[2],function(x) {any(is.na(x))}))
lapply(dc_2017_c, function(df) sapply(df,function(x) {any(is.na(x))}))
?any
{any(sum(x == "") == nrow(x)}))
{any(sum(x == "") == nrow(x)})))
lapply(dc_2017_c, function(df) sapply(df,
function(x){any(sum(x == "") == nrow(x)})))
lapply(dc_2017_c, function(df) sapply(df, function(x){any(sum(x == "") == nrow(x)})))
lapply(dc_2017_c, function(df) sapply(df,
function(x){any(sum(x == "") == nrow(x))}))
?sapply
dc_2017_c[]
dc_2017_c[[1]]
length(dc_2017_c[[1]]$X9)
sum(dc_2017_c[[1]]$X9 == "")
sum(dc_2017_c[[1]]$X1 == "")
try5 <- lapply(dc_2017_c, function(x){
x[] <- x[lapply(x, function(y) sum(y == "")!= nrow(x))]
})
try5 <- lapply(dc_2017_c, function(x){
x[] <- x[lapply(x, function(y) sum(y == ""))!= nrow(x)]
})
try5[[1]]$X11
try5[[1]]$X9
try5[[1]]
View(dc_2016_c)
dc_2016_c[[1]]
dc_2016_c[[1]]$X9
dc_2016_c[[2]]$X9
dc_2016_c[[3]]$X9
dc_2016_c[[5]]$X9
try5 <- lapply(dc_2016_c, function(x){
x[] <- x[lapply(x, function(y) sum(y == ""))!= nrow(x)]
})
try5[[5]]$X10
clean_dc <- function(lis){
lis <- lis[lapply(lis,length) >0 &
lapply(lis,is.logical)==FALSE]
lis <- lapply(lis, data.frame)
lis <- lapply(lis, function(x){
x[] <- x[lapply(x, function(y) sum(y == ""))!= nrow(x)]
})
return(lis)
}
rm(dc_2017_c)
rm(dc_2016_c)
rm(dc_2015_c)
clean_dc <- function(lis){
lis <- lis[lapply(lis,length) >0 &
lapply(lis,is.logical)==FALSE]
lis <- lapply(lis, data.frame)
lis <- lapply(lis, function(x){
x[] <- x[lapply(x, function(y) sum(y == ""))!= nrow(x)]
})
return(lis)
}
dc_2017_c <- clean_dc(dc_2017)
dc_2016_c <- clean_dc(dc_2016)
dc_2015_c <- clean_dc(dc_2015)
View(dc_2017_c)
ncol(dc_2017_c[[1]])
dc_2017_c[[1]]
View(dc_2015_c)
View(dc_2017_c)
View(dc_2016_c)
View(dc_2017_c)
lapply(dc_2017_c, function(df) df[-1:3,])
lapply(dc_2017_c, function(df) df[-c(1:3),])
clean_dc <- function(lis){
lis <- lis[lapply(lis,length) >0 &
lapply(lis,is.logical)==FALSE] # remove empty lists
lis <- lapply(lis, data.frame) # make each entry in a list a df
lis <- lapply(lis, function(x){
x[] <- x[lapply(x, function(y) sum(y == ""))!= nrow(x)]
}) #remove empty columns in each df in the list
lis <- lapply(lis, function(df) df[-c(1:3),]) #remove first 3 rows of df
return(lis)
}
dc_2017_c <- clean_dc(dc_2017)
dc_2016_c <- clean_dc(dc_2016)
dc_2015_c <- clean_dc(dc_2015)
View(dc_2017_c)
=dc_2017_c
dc_2017_c[[1]]
dc_2017_c[[2]]
dc_2017_c[[3]]
View(dc_2016_c)
dc_2016_c[[3]]
dc_2015_c[[3]]
x <- dc_2015_c[[3]]
View(x)
?str_split
x$x6[1,6]
x[1,6]
x[2,6]
grepl("^\\d{1}\\s+\\d{1}$",x[2,6])
grepl("\\s", x[2,1])
grepl("\\s", x[2,2])
grepl("\\s", x[2,4])
str_split(string = x[2,6], pattern = "\\s")
do.call(rbind, str_split(x[2,6],  "\\s"))
do.call(rbind, str_split(x[6],  "\\s"))
do.call(rbind, str_split(x[,6],  "\\s"))
?
?grepl
lapply(dc_2017_c, function(x){
x[] <- lapply(x, function(y){
if(grepl(pattern="\\s", y)){
s <- do.call(rbind,str_split(string = y, pattern = "\\s"))
}
})
c(x,s)
})
grepl("\\s",x$X6)
str_split(x$x6,"\\s")
str_split(string = x$x6,pattern = "\\s")
View(x)
str_split(string = x$X6,pattern = "\\s")
sum(grepl(pattern = "\s", x$X6))
sum(grepl(pattern = "\\s", x$X6))
try <- lapply(dc_2017_c, function(x){
x [] <- lapply(x, function(z){
if(sum(grepl(pattern="\\s", y))>25){
splits.df <- do.call(rbind, str_split(string = y, pattern = "\\s"))
c(x,s)
}
})
})
try <- lapply(dc_2017_c, function(x){
x [] <- lapply(x, function(y){
if(sum(grepl(pattern="\\s", y))>25){
splits.df <- do.call(rbind, str_split(string = y, pattern = "\\s"))
c(x,s)
}
})
})
try <- lapply(dc_2017_c, function(x){
x [] <- lapply(x, function(y){
if(sum(grepl(pattern="\\s", y))>25){
splits.df <- do.call(rbind, str_split(string = y, pattern = "\\s"))
c(x,splits.df)
}
})
})
View(try5)
try5[[1]]
warnings()
try <- lapply(dc_2017_c, function(x){
x [] <- lapply(x, function(y){
if(sum(grepl(pattern="\\s", y))>25){
splits.df <- do.call(rbind, str_split(string = y, pattern = "\\s"))
}
})
})
View(try)
rm(try5)
View(try)
try[[1]]
try <- lapply(dc_2017_c, function(x){
x [] <- lapply(x[2:nrow(x)], function(y){
if(sum(grepl(pattern="\\s", y))>25){
splits.df <- do.call(rbind, str_split(string = y, pattern = "\\s"))
}
})
})
try <- lapply(dc_2017_c, function(x){
x [] <- lapply(x[2:ncol(x)], function(y){
if(sum(grepl(pattern="\\s", y))>25){
splits.df <- do.call(rbind, str_split(string = y, pattern = "\\s"))
}
})
})
View(try)
try[[1]]
try[[3]]
try <- lapply(dc_2017_c, function(x){
x [] <- lapply(x[2:ncol(x)], function(y){
if(sum(grepl(pattern="\\s", y))>25){
splits.df <- data.frame(do.call(rbind, str_split(string = y, pattern = "\\s")))
}
})
})
View(try)
try[[1]]
str(try)
splits.df <- data.frame(do.call(rbind, str_split(string = dc_2017_c[[1]], pattern = "\\s")))
splits.df <- data.frame(do.call(rbind, str_split(string = dc_2017_c[[1]]$X10, pattern = "\\s")))
View(splits.df)
try[[1]]
lapply(try, is.null)
try[[1]]
View(try)
lapply(try, function(x){
lapply(x, is.null)
})
View(dc_2017_c)
dc_2017_c[[4]]
dc_2017_c[[10]]
lapply(try, function(x){
x[lapply(x, is.null)==FALSE]
})
View(try)
try[[1]]
c(try[[1]])
cbind(try[[1]])
data.frame(try[[1]])
View(try)
View(dc_2017_c)
dc_2017_c[[10]]
try <- lapply(dc_2017_c, function(x){
x [] <- lapply(x[2:ncol(x)], function(y){
if(sum(grepl(pattern="\\s", y))>10){
splits.df <- data.frame(do.call(rbind, str_split(string = y, pattern = "\\s")))
}
})
})
View(try)
try2 <- lapply(try, function(x){
x[lapply(x, is.null)==FALSE]
})
View(try2)
try2 <- lapply(try, function(x){
x <- x[lapply(x, is.null)==FALSE]
x <- data.frame(x)
})
View(try2)
View(try2)
try2[[1]]
try2 <- lapply(try, function(x){
x <- x[lapply(x, is.null)==FALSE]
})
View(try2)
try2[[1]]
try2 <- lapply(try, function(x){
x <- x[lapply(x, is.null)==FALSE]
x <- data.frame(x)
})
View(try2)
try2[[1]]
View(try)
View(try2)
View(dc_2017_c)
dc_2017_c[[1]]
View(x)
sum(grepl("\\s", x$X2))
lis <- lapply(dc_2017_c, function(x){
x[] <- x[lapply(x[2:ncol(x)], function(y) sum(grepl(pattern="\\s", y))==0]
}))
lis <- lapply(dc_2017_c, function(x){
x[] <- x[lapply(x[2:ncol(x)],
function(y) sum(grepl(pattern="\\s", y))==0]}))
lis <- lapply(dc_2017_c, function(x){
x[] <- x[lapply(x[2:ncol(x)],
function(y) sum(grepl(pattern="\\s", y))==0]}))
ex <- lapply(dc_2017_c, function(x){
x[] <- x[lapply(x[2:ncol(x)], function(y) sum(grepl(pattern="\\s", y)))==0]})
View(ex)
ex[[1]]
ex[[2]]
ex[[2]]$X11
grepl(ex[[2]]$X11, "\\s")
sum(grepl(ex[[2]]$X11, "\\s"))
sum(grepl("\\s", ex[[2]]$X11,))
sum(grepl("\\s", ex[[2]]$X11))
ex <- lapply(dc_2017_c, function(x){
x[] <- x[lapply(x[2:ncol(x)],
function(y) sum(grepl(pattern="\\s", string = y)))==0]})
ex <- lapply(dc_2017_c, function(x){
x[] <- x[lapply(x[2:ncol(x)],
function(y) sum(grepl(pattern="\\s", x = y)))==0]})
View(ex)
ex[[1]]$X11
sum(grepl(ex[[1]]$X11,"\\s"))
sum(grepl(x = ex[[1]]$X11,pattern = "\\s"))
ex <- lapply(dc_2017_c, function(x){
x[] <- x[lapply(x[2:ncol(x)],
function(y) sum(grepl(pattern="\\s", x = y)))<2]})
ex[[1]]
